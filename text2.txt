202001944711
202001944765
202005931719
202007593704
202007593731
202100097891

State,Population,AreaInSqKm,DensityPerSqKm
Uttar Pradesh-199812341-240928-828
Maharashtra-112372972-307713-365
Bihar-103804637-94163-1102
West Bengal-91347736-88752-1029
Madhya Pradesh-72597565-308245-236
Tamil Nadu-72138958-130058-555
Rajasthan-68621012-342239-201
Karnataka-61130704-191791-319
Gujarat-60383628-196024-308
Andhra Pradesh-49386799-162968-303
Odisha-41947358-155707-269
Telangana-35286757-114840-307
Kerala-33387677-38863-859
Jharkhand-32966238-79714-414
Assam-31169272-78438-397
Punjab-27704236-50362-550
Chattisgarh-25540196-135191-189
Haryana-25353081-44212-573
Jammu and Kashmir-12548926-222236-57
Uttarakhand-10116752-53483-189
Himachal Pradesh-6864602-55673-123
Tripura-3671032-10486-350
Meghalaya-2964007-22429-132
Manipur-2721756-22327-122
Nagaland-1980602-16579-119
Goa-1457723-3702-394
Arunachal Pradesh-1382611-21000-50
Mizoram-1091014-21081-52
Sikkim-607688-7096-86



















SrNo,State Name,TIN,StateCode
1-Andaman and Nicobar Islands-35-AN
2-Andhra Pradesh-28-AP
3-Andhra Pradesh New-37-AD
4-Arunachal Pradesh-12-AR
5-Assam-18-AS
6-Bihar-10-BH
7-Chandigarh-4-CH
8-Chattisgarh-22-CT
9-Dadra and Nagar Haveli-26-DN
10-Daman and Diu-25-DD
11-Delhi-7-DL
12-Goa-30-GA
13-Gujarat-24-GJ
14-Haryana-6-HR
15-Himachal Pradesh-2-HP
16-Jammu and Kashmir-1-JK
17-Jharkhand-20-JH
18-Karnataka-29-KA
19-Kerala-32-KL
20-Lakshadweep Islands-31-LD
21-Madhya Pradesh-23-MP
22-Maharashtra-27-MH
23-Manipur-14-MN
24-Meghalaya-17-ME
25-Mizoram-15-MI
26-Nagaland-13-NL
27-Odisha-21-OR
28-Pondicherry-34-PY
29-Punjab-3-PB
30-Rajasthan-8-RJ
31-Sikkim-11-SK
32-Tamil Nadu-33-TN
33-Telangana-36-TS
34-Tripura-16-TR
35-Uttar Pradesh-9-UP
36-Uttarakhand-5-UT
37-West Bengal-19-WB





















State,Population,AreaInSqKm,DensityPerSqKm
Uttar Pradesh,199812341,240928,828
Maharashtra,112372972,307713,365
Bihar,103804637,94163,1102
West Bengal,91347736,88752,1029
Madhya Pradesh,72597565,308245,236
Tamil Nadu,72138958,130058,555
Rajasthan,68621012,342239,201
Karnataka,61130704,191791,319
Gujarat,60383628,196024,308
Andhra Pradesh,49386799,162968,303
Odisha,41947358,155707,269
Telangana,35286757,114840,307
Kerala,33387677,38863,859
Jharkhand,32966238,79714,414
Assam,31169272,78438,397
Punjab,27704236,50362,550
Chattisgarh,25540196,135191,189
Haryana,25353081,44212,573
Jammu and Kashmir,12548926,222236,57
Uttarakhand,10116752,53483,189
Himachal Pradesh,6864602,55673,123
Tripura,3671032,10486,350
Meghalaya,2964007,22429,132
Manipur,2721756,22327,122
Nagaland,1980602,16579,119
Goa,1457723,3702,394
Arunachal Pradesh,1382611,21000,50
Mizoram,1091014,21081,52
Sikkim,607688,7096,86











//IndiaStateCode.csv
SrNo,State Name,TIN,StateCode
1,Andaman and Nicobar Islands,35,AN
2,Andhra Pradesh,28,AP
3,Andhra Pradesh New,37,AD
4,Arunachal Pradesh,12,AR
5,Assam,18,AS
6,Bihar,10,BH
7,Chandigarh,4,CH
8,Chattisgarh,22,CT
9,Dadra and Nagar Haveli,26,DN
10,Daman and Diu,25,DD
11,Delhi,7,DL
12,Goa,30,GA
13,Gujarat,24,GJ
14,Haryana,6,HR
15,Himachal Pradesh,2,HP
16,Jammu and Kashmir,1,JK
17,Jharkhand,20,JH
18,Karnataka,29,KA
19,Kerala,32,KL
20,Lakshadweep Islands,31,LD
21,Madhya Pradesh,23,MP
22,Maharashtra,27,MH
23,Manipur,14,MN
24,Meghalaya,17,ME
25,Mizoram,15,MI
26,Nagaland,13,NL
27,Odisha,21,OR
28,Pondicherry,34,PY
29,Punjab,3,PB
30,Rajasthan,8,RJ
31,Sikkim,11,SK
32,Tamil Nadu,33,TN
33,Telangana,36,TS
34,Tripura,16,TR
35,Uttar Pradesh,9,UP
36,Uttarakhand,5,UT
37,West Bengal,19,WB










//WrongIndiaStateCensusData.csv
Statesss,Population,AreaInSqKm,DensityPerSqKm
Uttar Pradesh,199812341,240928,828
Maharashtra,112372972,307713,365
Bihar,103804637,94163,1102
West Bengal,91347736,88752,1029
Madhya Pradesh,72597565,308245,236
Tamil Nadu,72138958,130058,555
Rajasthan,68621012,342239,201
Karnataka,61130704,191791,319
Gujarat,60383628,196024,308
Andhra Pradesh,49386799,162968,303
Odisha,41947358,155707,269
Telangana,35286757,114840,307
Kerala,33387677,38863,859
Jharkhand,32966238,79714,414
Assam,31169272,78438,397
Punjab,27704236,50362,550
Chattisgarh,25540196,135191,189
Haryana,25353081,44212,573
Jammu and Kashmir,12548926,222236,57
Uttarakhand,10116752,53483,189
Himachal Pradesh,6864602,55673,123
Tripura,3671032,10486,350
Meghalaya,2964007,22429,132
Manipur,2721756,22327,122
Nagaland,1980602,16579,119
Goa,1457723,3702,394
Arunachal Pradesh,1382611,21000,50
Mizoram,1091014,21081,52
Sikkim,607688,7096,86









//WrongIndiaStateCode.csv
SrNo,State Name,TINAAA,StateCode
1,Andaman and Nicobar Islands,35,AN
2,Andhra Pradesh,28,AP
3,Andhra Pradesh New,37,AD
4,Arunachal Pradesh,12,AR
5,Assam,18,AS
6,Bihar,10,BH
7,Chandigarh,4,CH
8,Chattisgarh,22,CT
9,Dadra and Nagar Haveli,26,DN
10,Daman and Diu,25,DD
11,Delhi,7,DL
12,Goa,30,GA
13,Gujarat,24,GJ
14,Haryana,6,HR
15,Himachal Pradesh,2,HP
16,Jammu and Kashmir,1,JK
17,Jharkhand,20,JH
18,Karnataka,29,KA
19,Kerala,32,KL
20,Lakshadweep Islands,31,LD
21,Madhya Pradesh,23,MP
22,Maharashtra,27,MH
23,Manipur,14,MN
24,Meghalaya,17,ME
25,Mizoram,15,MI
26,Nagaland,13,NL
27,Odisha,21,OR
28,Pondicherry,34,PY
29,Punjab,3,PB
30,Rajasthan,8,RJ
31,Sikkim,11,SK
32,Tamil Nadu,33,TN
33,Telangana,36,TS
34,Tripura,16,TR
35,Uttar Pradesh,9,UP
36,Uttarakhand,5,UT
37,West Bengal,19,WB












public class CensusAnalyser
    {

        public static int a = 10;
        public enum Country
        {
            INDIA, US, BRAZIL
        }
       
        
        Dictionary<string, CensusDTO> dataMap;
        public Dictionary<string, CensusDTO> LoadCensusData(string csvFilePath, Country country, string dataHeaders)
        {
            //CensusAnalyser obj = new CensusAnalyser();
            //Console.WriteLine(obj.a);
            dataMap = new CSVAdapterFactory().LoadCsvData(country, csvFilePath,dataHeaders);
            return dataMap;
        }
      
    }
















public class CensusAnalyserException : Exception
    {
        public enum ExceptionType
        {
            FILE_NOT_FOUND,
            INVALID_FILE_TYPE,
            INCORRECT_DELIMITER,
            INCORRECT_HEADER,
            NO_SUCH_COUNTRY
        }

        public ExceptionType eType;
        public CensusAnalyserException(string message, ExceptionType exceptionType) : base(message)
        {
            this.eType = exceptionType;
        }

    }
















class CSVAdapterFactory
    {
        public Dictionary<string, CensusDTO> LoadCsvData(CensusAnalyser.Country country,string csvFilePath, string dataHeaders)
        {
            switch(country)
            {
                case (CensusAnalyser.Country.INDIA):
                    return new IndianCensusAdapter().LoadCensusData(csvFilePath, dataHeaders);
                //case (CensusAnalyser.Country.US):
                //    return new USCensusAdapter().LoadUSCensusData(csvFilePath, dataHeaders);
                default:
                    throw new CensusAnalyserException("No Such Country", CensusAnalyserException.ExceptionType.NO_SUCH_COUNTRY);
            }
        }
    }









class IndianCensusAdapter : CensusAdapter
    {
        string[] censusData;
        Dictionary<string, CensusDTO> dataMap;
        public Dictionary<string,CensusDTO> LoadCensusData(string csvFilePath, string dataHeaders)
        {
            dataMap = new Dictionary<string, CensusDTO>();
            censusData=GetCensusData(csvFilePath,dataHeaders);
            foreach(string data in censusData.Skip(1))
            {
                if(!data.Contains(","))
                {
                    throw new CensusAnalyserException("File contains wrong delimiter", CensusAnalyserException.ExceptionType.INCORRECT_DELIMITER);

                }
                string[] column = data.Split(",");
                if (csvFilePath.Contains("IndiaStateCode.csv"))
                    dataMap.Add(column[1], new CensusDTO(new POCO.StateCodeDAO(column[0], column[1], column[2], column[3])));
                if (csvFilePath.Contains("IndiaStateCensusData.csv"))
                    dataMap.Add(column[0], new CensusDTO(new POCO.CensusDataDAO(column[0], column[1], column[2], column[3])));

            }

            return dataMap.ToDictionary(p => p.Key, p => p.Value);
        }
    }












public class CensusDTO
    {
        public int serialNumber;
        public string stateName;
        public string state;
        public int tin;
        public string stateCode;
        public long population;
        public long area;
        public long density;
        public long housingUnits;
        public double totalArea;
        public double waterArea;
        public double landArea;
        public double populationDensity;
        public double housingDensity;

        public CensusDTO(StateCodeDAO stateCodeDao)
        {
            this.serialNumber = stateCodeDao.serialNumber;
            this.stateName = stateCodeDao.stateName;
            this.tin = stateCodeDao.tin;
            this.stateCode = stateCodeDao.stateCode;
        }

        public CensusDTO(CensusDataDAO censusDataDao)
        {
            this.state = censusDataDao.state;
            this.population = censusDataDao.population;
            this.area = censusDataDao.area;
            this.density = censusDataDao.density;
        }

        //public CensusDTO(USCensusDAO usCensusDao)
        //{
        //    this.stateCode = usCensusDao.stateId;
        //    this.stateName = usCensusDao.stateName;
        //    this.population = usCensusDao.population;
        //    this.housingUnits = usCensusDao.housingUnits;
        //    this.totalArea = usCensusDao.totalArea;
        //    this.waterArea = usCensusDao.waterArea;
        //    this.landArea = usCensusDao.landArea;
        //}

    }




public class CensusDataDAO
    {
        public string state;
        public long population;
        public long area;
        public long density;

        public CensusDataDAO(string state, string population, string area, string density)
        {
            this.state = state;
            this.population = Convert.ToUInt32(population);
            this.area = Convert.ToUInt32(area);
            this.density = Convert.ToUInt32(density);
        }


    }




















public class StateCodeDAO
    {
        public int serialNumber;
        public string stateName;
        public int tin;
        public string stateCode;

        public StateCodeDAO(string v1, string v2, string v3, string v4)
        {
            this.serialNumber = Convert.ToInt32(v1);
            this.stateName = v2;
            this.tin = Convert.ToInt32(v3);
            this.stateCode = v4;
        }

    }
























 public class Tests
    {
        
        //CensusAnalyser.CensusAnalyser censusAnalyser;

        static string indianStateCensusHeaders = "State,Population,AreaInSqKm,DensityPerSqKm";
        static string indianStateCodeHeaders = "SrNo,State Name,TIN,StateCode";
        static string indianStateCensusFilePath = @"D:\Fellowship\Fellowship05-Day22_DesignPrincipal\IndianStateCensusAnalyzer\NUnitTestProject1\CsvFiles\IndiaStateCensusData.csv";
        static string wrongHeaderIndianCensusFilePath = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\WrongIndiaStateCensusData.csv";
        static string delimiterIndianCensusFilePath = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\DelimiterIndiaStateCensusData.csv";
        static string wrongIndianStateCensusFilePath = @"D:\Fellowship\Fellowship05-Day22_DesignPrincipal\IndianStateCensusAnalyzer\NUnitTestProject1\CsvFiles\WrongIndiaStateCensusData.csv";
        static string wrongIndianStateCensusFileType = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\IndiaStateCensusData.txt";
        static string indianStateCodeFilePath = @"D:\Fellowship\Fellowship05-Day22_DesignPrincipal\IndianStateCensusAnalyzer\NUnitTestProject1\CsvFiles\IndiaStateCode.csv";
        static string wrongIndianStateCodeFileType = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\IndiaStateCode.txt";
        static string delimiterIndianStateCodeFilePath = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\DelimiterIndiaStateCode.csv";
        static string wrongHeaderStateCodeFilePath = @"D:\Fellowship\Fellowship05-Day22_DesignPrincipal\IndianStateCensusAnalyzer\NUnitTestProject1\CsvFiles\WrongIndiaStateCode.csv";
        //US Census FilePath
        static string usCensusHeaders = "State Id,State,Population,Housing units,Total area,Water area,Land area,Population Density,Housing Density";
        static string usCensusFilepath = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\USCsvFiles\USCensusData.csv";
        static string wrongUSCensusFilePath = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\USCsvFiles\USData.csv";
        static string wrongUSCensusFileType = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\USCsvFiles\USCensusData.txt";
        static string wrongHeaderUSCensusFilePath = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\USCsvFiles\WrongHeaderUSCensusData.csv";
        static string delimeterUSCensusFilePath = @"C:\Users\Dell\source\repos\CensusAnalyser\CensusAnalyserTest\CsvFiles\USCsvFiles\DelimiterUSCensusData.csv";

        CensusAnalyser censusAnalyser;
        Dictionary<string, CensusDTO> totalRecord;
        Dictionary<string, CensusDTO> stateRecord;

        [SetUp]
        public void Setup()
        {
            censusAnalyser = new CensusAnalyser();
            totalRecord = new Dictionary<string, CensusDTO>();
            stateRecord = new Dictionary<string, CensusDTO>();
        }

        [Test]
        public void Test1()
        {
            Assert.Pass();
        }

        [Test]
        public void GivenIndianCensusDataFile_WhenRead_ShouldReturnCensusDataCount()
        {
            totalRecord = censusAnalyser.LoadCensusData( indianStateCensusFilePath, Country.INDIA, indianStateCensusHeaders);
            stateRecord = censusAnalyser.LoadCensusData( indianStateCodeFilePath, Country.INDIA, indianStateCodeHeaders);
            Assert.AreEqual(29, totalRecord.Count);
            Assert.AreEqual(37, stateRecord.Count);
        }
        [Test]
        public void GivenWrongIndianCensusDataFile_WhenRead_ShouldReturnCustomException()
        {
            var censusException = Assert.Throws<CensusAnalyserException>(() => censusAnalyser.LoadCensusData( wrongIndianStateCensusFilePath, Country.INDIA, indianStateCensusHeaders));
            var stateException = Assert.Throws<CensusAnalyserException>(() => censusAnalyser.LoadCensusData(wrongHeaderStateCodeFilePath, Country.INDIA, indianStateCodeHeaders));
            Assert.AreEqual(CensusAnalyserException.ExceptionType.INCORRECT_HEADER, censusException.eType);
            Assert.AreEqual(CensusAnalyserException.ExceptionType.INCORRECT_HEADER, stateException.eType);
        }

    }

